{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst jwt = new JwtHelperService();\n\nclass DecodedToken {}\n\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.uriseg = 'http://localhost:5000/api/users';\n      this.uriadmin = 'http://localhost:5000/api/admins';\n      this.decodedToken = JSON.parse(localStorage.getItem('auth_meta')) || new DecodedToken();\n    }\n\n    register(userData) {\n      const URI = this.uriseg + '/register';\n      return this.http.post(URI, userData);\n    }\n\n    adminRegister(userData) {\n      const URI = this.uriadmin + '/register';\n      return this.http.post(URI, userData);\n    }\n\n    login(userData) {\n      const URI = this.uriseg + '/login';\n      return this.http.post(URI, userData).pipe(map(token => {\n        return this.saveToken(token);\n      }));\n    }\n\n    adminLogin(userData) {\n      const URI = this.uriadmin + '/login';\n      return this.http.post(URI, userData).pipe(map(token => {\n        return this.saveToken(token);\n      }));\n    }\n\n    saveToken(token) {\n      this.decodedToken = jwt.decodeToken(token);\n      localStorage.setItem('auth_tkn', token);\n      localStorage.setItem('auth_meta', JSON.stringify(this.decodedToken));\n      return token;\n    }\n\n    logout() {\n      localStorage.removeItem('auth_tkn');\n      localStorage.removeItem('auth_meta');\n      localStorage.removeItem('cart');\n      localStorage.removeItem('wishlist');\n      this.decodedToken = new DecodedToken();\n    }\n\n    isAuthenticated() {\n      return moment().isBefore(moment.unix(this.decodedToken.exp));\n    }\n\n    getUsername() {\n      return this.decodedToken.username;\n    }\n\n    getUserId() {\n      console.log(this.decodedToken);\n      return this.decodedToken.userId;\n    }\n\n    getId() {\n      console.log(this.decodedToken);\n      return this.decodedToken.userId;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}