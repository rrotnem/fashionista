{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth/auth.service\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient, auth) {\n      this.httpClient = httpClient;\n      this.auth = auth;\n      this.uriseg = 'http://localhost:5000/api/admins';\n    } // DI for HttpClient\n\n\n    getAllUsers() {\n      const URI = this.uriseg + '/allUsers';\n      return this.httpClient.get(URI);\n    }\n\n    getAuthentication() {\n      let options = {\n        headers: new HttpHeaders().set('Authorization', localStorage.getItem('auth_tkn'))\n      };\n      const URI = this.uriseg + '/getAuthentication';\n      return this.httpClient.get(URI, options);\n    }\n\n    deleteUserById(prodId) {\n      const URI = this.uriseg + '/deleteUserById/';\n      return this.httpClient.delete(URI + prodId);\n    }\n\n    updateUser(user) {\n      console.log(user);\n      const URI = this.uriseg + '/updateUser';\n      return this.httpClient.put(URI, user);\n    }\n\n    register(userData) {\n      console.log(\"inadmin register\");\n      return this.auth.adminRegister(userData);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}